3.5 SYSTEM MODELING AND DESIGN

3.5.1 Unified Modeling Language (UML) Diagrams

3.5.1.1 Use Case Diagrams and Actor Analysis

The following use case diagram illustrates the main actors (User, Admin, System) and their interactions with the Verdex system:

```mermaid
usecase
  actor "User" as User
  actor "Admin" as Admin
  actor "System" as System
  User --> (Identify Plant)
  User --> (View Plant Library)
  User --> (Submit Feedback)
  User --> (Receive Notifications)
  User --> (Manage Profile)
  Admin --> (Manage Plants)
  Admin --> (Manage Categories)
  Admin --> (Respond to Feedback)
  Admin --> (View Analytics)
  System --> (Send Notifications)
  System --> (Log Activity)
```

Table 3.5.1: Actor Analysis
| Actor  |                                  |
|--------|---------------------------------------------|
| User   | End-user of the mobile app                  |
| Admin  | Manages content and user feedback           |
| System | Automated backend processes and notifications|

3.5.1.2 Activity Diagrams for Core Processes

**Core User Processes Activity:**
```mermaid
flowchart TD
    A[User Opens App] --> B{Logged In?}
    B -->|No| C[Login/Signup]
    B -->|Yes| D[Main Dashboard]
    C --> D
    
    D --> E{User Action?}
    
    %% Plant Identification
    E -->|Identify Plant| F[Choose Image Source]
    F --> G[Upload Image]
    G --> H[ML Processing]
    H --> I[Show Plant Details]
    I --> D
    
    %% Language Change
    E -->|Change Language| J[Select Language]
    J --> K[Update UI]
    K --> D
    
    %% Continue or Exit
    D --> L{Continue?}
    L -->|Yes| E
    L -->|No| M[Logout]
    M --> N[End]
```

3.5.1.3 Sequence Diagrams for System Interactions

**Plant Identification Sequence:**
```mermaid
sequenceDiagram
    participant User
    participant App
    participant API
    participant ML
    User->>App: Capture/Select Image
    App->>ML: Preprocess & Run Model
    ML-->>App: Identification Result
    App->>API: Log Activity
    API-->>App: Acknowledge
    App->>User: Show Result
```

3.5.1.4 Class Diagrams and Object-Oriented Design

**Core Classes:**
```mermaid
classDiagram
    class User {
      +int id
      +string name
      +string email
      +login()
      +logout()
    }
    class Plant {
      +int id
      +string name
      +string scientificName
      +string imageUrl
      +getDetails()
    }
    class Feedback {
      +int id
      +string message
      +int userId
      +submit()
    }
    User "1" -- "*" Feedback : submits
    User "*" -- "*" Plant : favorites
    Plant "1" -- "*" Feedback : referenced_in
```

3.5.1.5 State Diagrams for Complex Workflows

**User Authentication State:**
```mermaid
stateDiagram-v2
    [*] --> LoggedOut
    LoggedOut --> LoggingIn
    LoggingIn --> LoggedIn: Success
    LoggingIn --> LoggedOut: Failure
    LoggedIn --> LoggingOut
    LoggingOut --> LoggedOut
```

3.5.2 Data Flow Diagrams (DFD) and Process Modeling

**Level 0 DFD:**
```mermaid
flowchart TD
    User-->|Image|App
    App-->|Image Data|MLModel
    MLModel-->|Result|App
    App-->|Request|API
    API-->|Data|DB
    API-->|Response|App
    App-->|Display|User
```

3.5.3 Entity-Relationship Diagrams (ERD) and Database Design

```mermaid
erDiagram
    users ||--o{ feedback : submits
    users ||--o{ favorites : has
    users ||--o{ notifications : receives
    users ||--o{ activity_logs : generates
    plants ||--o{ plant_translations : has
    plants ||--o{ favorites : favorited_by
    plants ||--o{ feedback : referenced_in
    categories ||--o{ plants : contains
    plant_categories ||--o{ plants : categorizes
    roles ||--o{ users : assigned_to
    permissions ||--o{ roles : granted_to
    feedback ||--o{ notifications : triggers
```

3.5.4 User Interface Design and Wireframing

**Complete Page Flow Diagram:**
```mermaid
flowchart TD
    A[App Launch] --> B[Splash Screen]
    B --> C{User Authenticated?}
    
    C -->|No| D[Welcome Screen]
    C -->|Yes| E{Onboarding Complete?}
    
    D --> F[Language Selection]
    D --> G[Login Screen]
    D --> H[Signup Screen]
    D --> I[Forgot Password Screen]
    
    E -->|No| J[Onboarding Screen]
    E -->|Yes| K{Permissions Granted?}
    
    J --> L[Main Screen]
    K -->|No| M[Permission Screen]
    K -->|Yes| L
    
    G --> N[Main Screen]
    H --> N
    I --> G
    M --> L
    
    %% Main App Navigation
    L --> O[Home Screen]
    L --> P[Identify Screen]
    L --> Q[Settings Screen]
    
    %% Home Screen Navigation
    O --> R[Plant Library Screen]
    O --> S[Plant Details Screen]
    O --> T[Search Screen]
    O --> U[Favorites Screen]
    O --> V[Notifications Screen]
    O --> W[Feedback Screen]
    
    %% Identify Screen Flow
    P --> X[Plant Result Screen]
    X --> S
    X --> W
    
    %% Settings Screen Navigation
    Q --> Y[Edit Profile Screen]
    Q --> Z[Change Password Screen]
    Q --> AA[Language Settings Screen]
    Q --> BB[About Us Screen]
    Q --> CC[Terms Screen]
    Q --> DD[Privacy Policy Screen]
    Q --> EE[Debug Screen]
    
    %% Notifications Flow
    V --> FF[Notification Details Screen]
    FF --> V
    
    %% Feedback Flow
    W --> GG[Feedback Success Screen]
    GG --> O
    
    %% Return to Main
    R --> O
    S --> O
    T --> O
    U --> O
    Y --> Q
    Z --> Q
    AA --> Q
    BB --> Q
    CC --> Q
    DD --> Q
    EE --> Q
    
    %% Logout Flow
    Q --> HH[Logout]
    HH --> D
```

**Screen Descriptions:**
- **App Launch**: Application initialization
- **Splash Screen**: Loading screen with app logo
- **Welcome Screen**: App introduction and language selection
- **Language Selection**: Choose app language
- **Login Screen**: User authentication
- **Signup Screen**: New user registration
- **Forgot Password Screen**: Password recovery
- **Onboarding Screen**: App tutorial and introduction
- **Permission Screen**: Camera and storage permissions
- **Main Screen**: Bottom navigation container
- **Home Screen**: Main dashboard with plant library access
- **Identify Screen**: Plant identification interface
- **Settings Screen**: App configuration and user settings
- **Plant Library Screen**: Browse all plants
- **Plant Details Screen**: Individual plant information
- **Search Screen**: Plant search functionality
- **Favorites Screen**: User's favorite plants
- **Notifications Screen**: User notifications list
- **Feedback Screen**: Submit user feedback
- **Plant Result Screen**: ML identification results
- **Edit Profile Screen**: Modify user information
- **Change Password Screen**: Password update
- **Language Settings Screen**: Language selection
- **About Us Screen**: App information
- **Terms Screen**: Terms of service
- **Privacy Policy Screen**: Privacy policy
- **Debug Screen**: Development debugging tools
- **Notification Details Screen**: Individual notification view
- **Feedback Success Screen**: Confirmation message

3.5.5 API Design and Interface Specifications

Table 3.5.2: Key API Endpoints
| Endpoint                | Method | Description                       |
|-------------------------|--------|-----------------------------------|
| /api/login              | POST   | User authentication               |
| /api/plants             | GET    | List all plants                   |
| /api/plants/{id}        | GET    | Get plant details                 |
| /api/identify           | POST   | Identify plant from image         |
| /api/feedback           | POST   | Submit user feedback              |
| /api/notifications      | GET    | Get user notifications            |

All endpoints use JSON for request/response and require authentication except login and plant identification. 